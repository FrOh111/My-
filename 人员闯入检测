# 还需要解决：人影图像只保存3个，即0，1，2，3，因为0是灰色的图。intruder大于4是则为4
#             画面中5秒内没有人影，intruder变成0
#               有人影的话秒数归零，秒数到10则intruder归零
#             每次只发送一次“疑似有人闯入”，消失5秒后提示“此人已离开”

import cv2
import numpy as np
from datetime import datetime
import win32gui
import win32con
import win32clipboard
import win32ui
from PIL import Image
from io import BytesIO #新增字节流
import time

threshold = 0.6
nms_threshold = 0.2
msg = "疑似有人闯入"
user = "监控辅助工具"
intruder = 1

cap = cv2.VideoCapture(0)

classNames = []
classFile = 'Resources/coco.names'

with open(classFile,'rt') as f:
    classNames = f.read().rstrip('\n').split('\n')
#print(classNames)

configPath = 'Resources/ssd_mobilenet_v3_large_coco_2020_01_14.pbtxt'
weightsPath = 'Resources/frozen_inference_graph.pb'
net = cv2.dnn_DetectionModel(weightsPath,configPath)

net.setInputSize(320,320)
net.setInputScale(1.0/127.5)
net.setInputMean((127.5,127.5,127.5))
net.setInputSwapRB(True)


def send_message(name,msg):
    # 窗口名字，就是备注名
    # name = "pipi1"
    # 将测试消息复制到剪切板中
    win32clipboard.OpenClipboard()
    win32clipboard.EmptyClipboard()
    win32clipboard.SetClipboardData(win32con.CF_UNICODETEXT,msg)
    win32clipboard.CloseClipboard()
    # 获取窗口句柄
    handle = win32gui.FindWindow(None, name)
    # 填充消息
    win32gui.SendMessage(handle, 770, 0, 0)
    # 回车发送消息
    win32gui.SendMessage(handle, win32con.WM_KEYDOWN, win32con.VK_RETURN, 0)


def savePhoto(name,intruder):
    # 获取后台窗口的句柄，注意后台窗口不能最小化
    hWnd = win32gui.FindWindow(None, name)  # 窗口的类名可以用Visual Studio的SPY++工具获取
    # 获取句柄窗口的大小信息
    left, top, right, bot = win32gui.GetWindowRect(hWnd)
    width = right - left
    height = bot - top
    #返回句柄窗口的设备环境，覆盖整个窗口，包括非客户区，标题栏，菜单，边框
    hWndDC = win32gui.GetWindowDC(hWnd)
    #创建设备描述表
    mfcDC = win32ui.CreateDCFromHandle(hWndDC)
    #创建内存设备描述表
    saveDC = mfcDC.CreateCompatibleDC()
    #创建位图对象准备保存图片
    saveBitMap = win32ui.CreateBitmap()
    #为bitmap开辟存储空间
    saveBitMap.CreateCompatibleBitmap(mfcDC, width, height)
    #将截图保存到saveBitMap中
    saveDC.SelectObject(saveBitMap)
    #保存bitmap到内存设备描述表
    saveDC.BitBlt((0, 0), (width, height), mfcDC, (0, 0), win32con.SRCCOPY)
    #保存到文件中
    saveBitMap.SaveBitmapFile(saveDC, "有人闯入{times}.bmp".format(times = intruder))
    # 内存释放
    win32gui.DeleteObject(saveBitMap.GetHandle())

    saveDC.DeleteDC()
    mfcDC.DeleteDC()
    win32gui.ReleaseDC(hWnd, hWndDC)
def send_photo(name):
    name = "监控辅助工具"
    img = Image.open("有人闯入{times}.bmp".format(times = intruder))
    output = BytesIO()  # 如是StringIO分引起TypeError: string argument expected, got 'bytes'
    img.convert("RGB").save(output, "BMP")  # 以BMP格式保存流
    data = output.getvalue()[14:]  # bmp文件头14个字节丢弃
    output.close()
    win32clipboard.OpenClipboard()  # 打开剪贴板
    win32clipboard.EmptyClipboard()  # 先清空剪贴板
    win32clipboard.SetClipboardData(win32con.CF_DIB, data)  # 将图片放入剪贴板
    win32clipboard.CloseClipboard()
    # 获取窗口句柄
    handle = win32gui.FindWindow(None, name)
    # 填充消息
    win32gui.SendMessage(handle, 770, 0, 0)
    # 回车发送消息
    win32gui.SendMessage(handle, win32con.WM_KEYDOWN, win32con.VK_RETURN, 0)
while True:
    success,img = cap.read()
    classIds,confs,bbox = net.detect(img,confThreshold=threshold)

    #indices = cv2.dnn.NMSBoxes(bbox,confs,threshold,nms_threshold=nms_threshold)    #需要把bbox和confs转变成list
    #bbox原来是numpy.ndarray类型，诸如[[336 154 180 323]]
    #confs原来也是numpy.ndarray类型

    bbox = list(bbox)
    #   注：把confs强转成np.array是为了使用reshape方法
    confs = list(np.array(confs).reshape(1,-1)[0])    #这时的confs中每一项属于numpy.float32类型，需要用map转成float类型
    confs = list(map(float,confs))

    indices = cv2.dnn.NMSBoxes(bbox, confs, threshold, nms_threshold=nms_threshold)
    #   此时的indices返回bbox的索引值

    for i in indices:
        i = i[0]
        box = bbox[i]
        x,y,w,h = box[0],box[1],box[2],box[3]
        cv2.rectangle(img, (x,y),(x+w,y+h), color=(255, 0, 0), thickness=2)
        cv2.putText(img, classNames[classIds[i][0] - 1], (box[0], box[1] + 30), cv2.FONT_HERSHEY_DUPLEX, 1, (255, 0, 0), 2)
        cv2.putText(img, str(round(confs[0] * 100, 1)), (box[0] + 150, box[1] + 30), cv2.FONT_HERSHEY_DUPLEX, 1,
                    (255, 0, 0), 2)
        if classNames[classIds[i][0] - 1] == 'person':
            success, imgPerson = cap.read()
            now = datetime.now()
            timeStr = now.strftime('%H:%M:%S')
            # print(timeStr)
            cv2.putText(imgPerson, str(timeStr), (450, 50), cv2.FONT_HERSHEY_DUPLEX, 1,
                        (255, 0, 0), 2)
            cv2.imshow('People', imgPerson)
            send_message(user,msg)
            savePhoto('People',intruder=intruder)
            send_photo(user)
            intruder += 1
            if intruder >= 4:
                intruder = 4
            # time.sleep(5)
    cv2.imshow('Output',img)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
